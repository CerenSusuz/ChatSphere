// <auto-generated />
using System;
using ChatSphere.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatSphere.Infrastructure.Migrations;

[DbContext(typeof(ChatSphereDbContext))]
[Migration("20250526151152_AddedAdminFields")]
partial class AddedAdminFields
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.4")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("ChatSphere.Domain.Entities.ChatMessage", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Content")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsMine")
                    .HasColumnType("bit");

                b.Property<Guid>("RoomId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("SenderUsername")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Timestamp")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("RoomId");

                b.ToTable("ChatMessages");
            });

        modelBuilder.Entity("ChatSphere.Domain.Entities.ChatUserRoom", b =>
            {
                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("RoomId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("UserId", "RoomId");

                b.HasIndex("RoomId");

                b.ToTable("ChatUserRooms");
            });

        modelBuilder.Entity("ChatSphere.Domain.Entities.Room", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Rooms");
            });

        modelBuilder.Entity("ChatSphere.Domain.Entities.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.Property<bool>("IsBanned")
                    .HasColumnType("bit");

                b.Property<string>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("Email")
                    .IsUnique();

                b.ToTable("Users");
            });

        modelBuilder.Entity("ChatSphere.Domain.Entities.ChatMessage", b =>
            {
                b.HasOne("ChatSphere.Domain.Entities.Room", "Room")
                    .WithMany("Messages")
                    .HasForeignKey("RoomId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Room");
            });

        modelBuilder.Entity("ChatSphere.Domain.Entities.ChatUserRoom", b =>
            {
                b.HasOne("ChatSphere.Domain.Entities.Room", "Room")
                    .WithMany("Users")
                    .HasForeignKey("RoomId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("ChatSphere.Domain.Entities.User", "User")
                    .WithMany("Rooms")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Room");

                b.Navigation("User");
            });

        modelBuilder.Entity("ChatSphere.Domain.Entities.Room", b =>
            {
                b.Navigation("Messages");

                b.Navigation("Users");
            });

        modelBuilder.Entity("ChatSphere.Domain.Entities.User", b =>
            {
                b.Navigation("Rooms");
            });
#pragma warning restore 612, 618
    }
}
